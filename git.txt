Git:-
============================================

a.	Understand what is GIT?

`Git is an open-source distributed version control system. 
It is designed to handle minor to major projects with high speed and efficiency. 
It is developed to co-ordinate the work among the developers. The version control 
allows us to track and work together with our team members at 
the same workspace.`

`Git is foundation of many services like GitHub and GitLab, but we can use 
Git without using any other Git services. Git can be used privately and publicly.`

`Git was created by Linus Torvalds in 2005 to develop Linux Kernel. It is also used as 
an important distributed version-control tool for the DevOps.`

------------------------------------------------------------------------------------------------------------------

b.	Why we need GIT?

A version control application allows us to keep track of all the changes that we make in the files of 
our project. Every time we make changes in files of an existing project, we can push those changes to a 
repository. Other developers are allowed to pull your changes from the repository and continue to work 
with the updates that you added to the project files.

Saves Time:-
==========
Git is lightning fast technology. Each command takes only a few seconds to execute so we can save a lot of 
time as compared to login to a GitHub account and find out its features.

Offline Working:-
================
One of the most important benefits of Git is that it supports offline working. If we are facing internet 
connectivity issues, it will not affect our work. In Git, we can do almost everything locally. Comparatively,
 other CVS like SVN is limited and prefer the connection with the central repository.

Undo Mistakes:-
==================
One additional benefit of Git is we can Undo mistakes. Sometimes the undo can be a savior option for us. 
Git provides the undo option for almost everything.

Track the Changes:-
==================
Git facilitates with some exciting features such as Diff, Log, and Status, which allows us to track 
changes so we can check the status, compare our files or branches.

==>With many features and benefits of Git that it demonstrate it is undoubtedly Git as the leading 
version control system. 


Git Integrity:-
==============
Git is developed to ensure the security and integrity of content being version controlled.

Trendy Version Control System:-
=============================
Git is the most widely used version control system. It has maximum projects among all the version control 
systems. Due to its amazing workflow and features, it is a preferred choice of developers.

Everything is Local:-
====================
Almost All operations of Git can be performed locally; this is a significant reason for the use of Git. 
We will not have to ensure internet connectivity.

Collaborate to Public Projects:-
==============================
There are many public projects available on the GitHub. We can collaborate on those projects and show 
our creativity to the world. Many developers are collaborating on public projects.

Impress Recruiters:-
====================
We can impress recruiters by mentioning the Git and GitHub on our resume.


------------------------------------------------------------------------------------------------------------------

c.	How does the GIT work?













d.	What are alternatives to GIT?

Azure DevOps Server
Helix Core
AWS CodeCommit
Subversion
Rational ClearCase
Mercurial
Plastic SCM
Micro Focus AccuRev

-------------------------------------------------------------------------------------------------------------------


e.	How many companies are available for us to create repositories ?

==> there are many companies which provide services to create and maintain a repository, some of them are:
*GitHub,
*GitBash,
*GitLab,
*Bitbucket,
*ProjectLocker etc ....

-------------------------------------------------------------------------------------------------------------------

f.	What is a repository?

Repositories in GIT contain a collection of files of various different versions of a Project. These files 
are imported from the repository into the local server of the user for further updations and modifications
in the content of the file. A VCS or the Version Control System is used to create these versions and store 
them in a specific place termed as a repository.

The process of copying the content from an existing Git Repository with the help of various Git Tools is 
termed as cloning. Once the cloning process is done, the user gets the complete repository on his local 
machine. Git by default assumes the work to be done on the repository is as a user, once the cloning is 
done.

Users can also create a new repository or delete an existing repository. To delete a repository, the 
simpler way is to just delete the folder containing the repository.

-------------------------------------------------------------------------------------------------------------------


g.	What is  a branch?

In Git, a branch is a new/separate version of the main repository.

=> With a new branch called new-design, edit the code directly without impacting the main branch
=> EMERGENCY! There is an unrelated error somewhere else in the project that needs to be fixed ASAP!
=> Create a new branch from the main project called small-error-fix
=> Fix the unrelated error and merge the small-error-fix branch with the main branch
=> You go back to the new-design branch, and finish the work there
=> Merge the new-design branch with main (getting alerted to the small error fix that you were missing)



i.	How to create a branch?

        =>git branch branch_Name

        to check all the present branches:

        =>git branch -a

        * on the branch name indicates that the current changes and commits and push applies to that branch

        to switch to another branch

        => git checkout branch_Name


ii.	How to create a pull request?




iii.	How to  merge a pull request 
iv.	How to check merge conflicts 
